package userInterface;



import java.awt.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.*;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import hatalskan.ExamScorer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * GUI
 * @author Door Guardians
 */
public class GUIMain extends javax.swing.JFrame
                     implements PropertyChangeListener{
    /** The card layout object for the UI */
    private CardLayout cl;
    
    /** The file chooser for the exam files and roster files */
    private JFileChooser fileChooser;
    /** The array of exam files returned from the fileChooser */
    private File[] exams;
    /** The file containing roster information of students */
    private File polyLearnFile;
    /** The directory for outputting the exam result files */
    private File outDir;
    /** The overall output file */
    private File outputFile;
    
    /** Instance of ExamScorer that is used to run in the background */
    private ExamScorer grader;
    /** Frame that is used to display the exam grades in a table */
    private GradeFrame gradeFrame;
    /** Frame that is used to display the exam statistics in a table */
    private StatsFrame statsFrame;
    
    /**
     * Creates a new UICards UI piece
     */
    public GUIMain() {
        initComponents();
        cl = (CardLayout)cards.getLayout();
        fileChooser = new JFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cards = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        browseButton1 = new javax.swing.JButton();
        fileTextField = new javax.swing.JTextField();
        nextButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        browseButton3 = new javax.swing.JButton();
        rosterFileTextField = new javax.swing.JTextField();
        nextButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        backButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panel3 = new javax.swing.JPanel();
        beginGradingButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        browseButton2 = new javax.swing.JButton();
        dirTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        panel4 = new javax.swing.JPanel();
        jProgressBar2 = new javax.swing.JProgressBar();
        gradingLabel = new javax.swing.JLabel();
        resultsButton = new javax.swing.JButton();
        progressLabel = new javax.swing.JLabel();
        panel5 = new javax.swing.JPanel();
        viewGradesButton = new javax.swing.JButton();
        viewStatsButton = new javax.swing.JButton();
        openOutputButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        againButton = new javax.swing.JButton();
        GradesHelpButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem helpMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        optionsMenu = new javax.swing.JMenu();
        polyLearnAnswerMenuItem = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hatalskan v2.0");
        getContentPane().setLayout(new java.awt.CardLayout());

        cards.setLayout(new java.awt.CardLayout());

        panel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        browseButton1.setText("Browse...");
        browseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButton1ActionPerformed(evt);
            }
        });

        fileTextField.setEditable(false);

        nextButton1.setText("Next");
        nextButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Choose exam file(s)");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Accepted file formats: \".pdf\"");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(nextButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseButton1)
                        .addContainerGap(94, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(158, 158, 158))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton1)
                    .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addComponent(nextButton1)
                .addContainerGap())
        );

        cards.add(panel1, "panel1");

        panel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        browseButton3.setText("Browse...");
        browseButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButton3ActionPerformed(evt);
            }
        });

        rosterFileTextField.setEditable(false);

        nextButton2.setText("Next");
        nextButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("Choose PolyLearn file");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Accepted file formats: \".csv\", no file is required");

        backButton2.setText("Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(rosterFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton3)
                    .addComponent(rosterFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(83, 83, 83)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nextButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cards.add(panel2, "panel2");
        panel2.getAccessibleContext().setAccessibleName("");

        panel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        beginGradingButton.setText("Begin Grading");
        beginGradingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginGradingButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        browseButton2.setText("Browse...");
        browseButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButton2ActionPerformed(evt);
            }
        });

        dirTextField.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Choose an output directory");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Defaults to directory of selected tests");

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(357, 357, 357)
                            .addComponent(beginGradingButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                            .addComponent(dirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(browseButton2)
                            .addGap(94, 94, 94))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(152, 152, 152)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(119, 119, 119)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton2)
                    .addComponent(dirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beginGradingButton)
                    .addComponent(backButton))
                .addContainerGap())
        );

        cards.add(panel3, "panel3");

        panel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jProgressBar2.setStringPainted(true);

        gradingLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        gradingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gradingLabel.setText("Grading...");

        resultsButton.setText("Results");
        resultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsButtonActionPerformed(evt);
            }
        });

        progressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        progressLabel.setText(" ");

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                        .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                        .addComponent(resultsButton)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                        .addComponent(progressLabel)
                        .addGap(209, 209, 209))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel4Layout.createSequentialGroup()
                        .addComponent(gradingLabel)
                        .addGap(196, 196, 196))))
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(gradingLabel)
                .addGap(52, 52, 52)
                .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(progressLabel)
                .addGap(41, 41, 41)
                .addComponent(resultsButton)
                .addContainerGap())
        );

        cards.add(panel4, "panel4");

        panel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        viewGradesButton.setText("View");
        viewGradesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewGradesButtonActionPerformed(evt);
            }
        });

        viewStatsButton.setText("View");
        viewStatsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStatsButtonActionPerformed(evt);
            }
        });

        openOutputButton.setText("Open");
        openOutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openOutputButtonActionPerformed(evt);
            }
        });

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("Test Results");

        jLabel6.setText("Grades");

        jLabel8.setText("Statistics");

        jLabel9.setText("Output file");

        againButton.setText("Grade Another");
        againButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                againButtonActionPerformed(evt);
            }
        });

        GradesHelpButton.setText("Help");
        GradesHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GradesHelpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel5Layout.createSequentialGroup()
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel5Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel10)
                        .addGap(186, 186, 186))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel5Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel5Layout.createSequentialGroup()
                                .addComponent(againButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel5Layout.createSequentialGroup()
                                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addGap(31, 31, 31)
                                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(viewGradesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewStatsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(openOutputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(GradesHelpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)))))
                .addContainerGap())
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel10)
                .addGap(34, 34, 34)
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(viewGradesButton)
                    .addComponent(GradesHelpButton))
                .addGap(18, 18, 18)
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(viewStatsButton))
                .addGap(18, 18, 18)
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(openOutputButton))
                .addGap(66, 66, 66)
                .addGroup(panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitButton)
                    .addComponent(againButton))
                .addContainerGap())
        );

        cards.add(panel5, "panel5");

        getContentPane().add(cards, "card7");

        helpMenu.setText("Help");

        helpMenuItem.setText("Help...");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuItem);

        aboutMenuItem.setText("About...");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);
        helpMenu.getAccessibleContext().setAccessibleDescription("");

        optionsMenu.setText("Options");

        polyLearnAnswerMenuItem.setText("Include Answers in PolyLearn File");
        polyLearnAnswerMenuItem.setToolTipText("Option to give the correct answer in PolyLearn feedback if the student answered incorrectly.");
        polyLearnAnswerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polyLearnAnswerMenuItemActionPerformed(evt);
            }
        });
        optionsMenu.add(polyLearnAnswerMenuItem);

        jMenuBar1.add(optionsMenu);
        optionsMenu.getAccessibleContext().setAccessibleDescription("");

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void resultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsButtonActionPerformed
        cl.next(cards);
        jProgressBar2.setValue(0);
    }//GEN-LAST:event_resultsButtonActionPerformed

    private void viewGradesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewGradesButtonActionPerformed
        // Create an instance of the grade frame
        gradeFrame = new GradeFrame(grader.getExams());
        // Show the grade frame
        gradeFrame.setVisible(true);
    }//GEN-LAST:event_viewGradesButtonActionPerformed

    private void viewStatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStatsButtonActionPerformed
        // Create an instance of the grade frame
        statsFrame = new StatsFrame(grader.getExams());
        // Show the grade frame
        statsFrame.setVisible(true);
    }//GEN-LAST:event_viewStatsButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        // Confirm the user wants to leave
        int response = JOptionPane.showConfirmDialog(
                        this,
                        InterfaceStrings.kGUIQuit
                        + outputFile.getAbsolutePath().toString() + "\n" 
                        ,
                        "Quit Confirmation",
                        JOptionPane.YES_NO_OPTION);
        
        if (response == JOptionPane.OK_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_quitButtonActionPerformed

//GEN-FIRST:event_nextButton1ActionPerformed
    private void nextButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        if (dirTextField.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
            InterfaceStrings.kNoExamFiles,
            "No file warning",
            JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            cl.next(cards);
        }
    }
//GEN-LAST:event_nextButton1ActionPerformed

    /* Browse files Button */
    private void browseButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButton1ActionPerformed

        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setFileFilter(new ExamFileFilter());
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setSelectedFile(new File(fileTextField.getText()));

        // Show the file selector dialogue
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            exams = fileChooser.getSelectedFiles();

            // If one or more files were chosen, prepare text fields
            if (exams.length > 0)
            {
                // Reset the text field
                fileTextField.setText("");

                // Set the directory text box (next panel) to the
                // path of the first file
                String absolutePath = exams[0].getAbsolutePath();
                dirTextField.setText(absolutePath.substring(0,
                    absolutePath.lastIndexOf(File.separator) + 1));
        }

        // Assign each file name into the box
        for (int i = 0; i < exams.length; i++)
        {
            if (!fileTextField.getText().equals(""))
            {
                fileTextField.setText(
                        fileTextField.getText() + ", " + exams[i].getName());
            }
            else
            {
                fileTextField.setText(exams[i].getName());
            }
        }
        }
    }//GEN-LAST:event_browseButton1ActionPerformed

    private void openOutputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openOutputButtonActionPerformed
        try {
            Desktop.getDesktop().open(
                    new File( outputFile.getAbsolutePath() ));
        } catch (IOException ex) {
            Logger.getLogger(GUIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openOutputButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        AboutFrame ab = new AboutFrame();
        ab.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed

        JOptionPane.showMessageDialog(this,
            InterfaceStrings.kGUIHelp, "Help"
                    
            ,JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpMenuItemActionPerformed

    private void againButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_againButtonActionPerformed
         // Confirm the user wants to leave
        int response = JOptionPane.showConfirmDialog(
                        this,
                        InterfaceStrings.kGradeAgain
                        + outputFile.getAbsolutePath() + "\n" 
                        ,
                        "Quit Confirmation",
                        JOptionPane.YES_NO_OPTION);
        
        if (response == JOptionPane.OK_OPTION)
        {
            optionsMenu.setEnabled(true);
            cl.show(cards, "panel1");
        }
        
    }//GEN-LAST:event_againButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        rosterFileTextField.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        cl.previous(cards);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void nextButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButton2ActionPerformed
        if (rosterFileTextField.getText().equals(""))
        {
            int response = JOptionPane.showConfirmDialog(this,
                InterfaceStrings.kNoPolyLearnFile,
                "No File Confirmation",
                JOptionPane.YES_NO_OPTION);

            if (response == JOptionPane.OK_OPTION)
            {
                polyLearnFile = null;
                cl.next(cards);
            }
        }
        else
        {
            cl.next(cards);
        }

    }//GEN-LAST:event_nextButton2ActionPerformed

    private void browseButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButton3ActionPerformed

        fileChooser.setFileFilter(new PolyLearnFileFilter());
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setSelectedFile(new File(rosterFileTextField.getText()));

        // Show the file selector dialogue
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            polyLearnFile = fileChooser.getSelectedFile();

            rosterFileTextField.setText(polyLearnFile.getName());
        }
    }//GEN-LAST:event_browseButton3ActionPerformed

    private void browseButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButton2ActionPerformed
        // Defaults to directory that the image was chosen from
        JFileChooser dirChooser = new JFileChooser();
        dirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        dirChooser.setCurrentDirectory(new File(dirTextField.getText()));

        //Show directory chooser dialogue
        if (dirChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            //Set the text
            outDir = dirChooser.getSelectedFile();
            dirTextField.setText(outDir.getPath());
        }
    }//GEN-LAST:event_browseButton2ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        cl.previous(cards);
    }//GEN-LAST:event_backButtonActionPerformed

    private void beginGradingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginGradingButtonActionPerformed
        // Begin the grading

        if (dirTextField.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
                InterfaceStrings.kNoOutputDir,
                "No output directory warning",
                JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            outDir = new File(dirTextField.getText());

            /* Create the main process */
            grader = new ExamScorer(exams, outDir, polyLearnFile,
                                    polyLearnAnswerMenuItem.isSelected());

            /* Add a listener for when grader changes status */
            grader.addPropertyChangeListener(this);

            grader.execute();
            optionsMenu.setEnabled(false);
            cl.next(cards);
            gradingLabel.setText("Grading...");
            resultsButton.setEnabled(false);
        }
    }//GEN-LAST:event_beginGradingButtonActionPerformed

    private void GradesHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GradesHelpButtonActionPerformed
        JOptionPane.showMessageDialog(this,
            InterfaceStrings.kTableHelp, 
            "Help" 
            ,JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_GradesHelpButtonActionPerformed

    private void polyLearnAnswerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polyLearnAnswerMenuItemActionPerformed
        
    }//GEN-LAST:event_polyLearnAnswerMenuItemActionPerformed
    
    /* Property Change Listener Function */
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        
        if ("progress" == evt.getPropertyName()) {
            int progress = (Integer) evt.getNewValue();
            jProgressBar2.setValue(progress);
        } 
        
        if (jProgressBar2.getValue() >= 100)
        {
            String createdFiles = "";
            
            for (String file : grader.getFileList())
            {
                createdFiles += file + "\n";
            }
            
            JOptionPane.showMessageDialog(this,
                "Created Files:\n" + createdFiles,
                "Files Created",
                JOptionPane.INFORMATION_MESSAGE);
            gradingLabel.setText("Grading Complete!");
            resultsButton.setEnabled(true);
            outputFile = new File(outDir.getAbsolutePath() + File.separator +
                    grader.getCumulative().getFileName());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GradesHelpButton;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton againButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton backButton2;
    private javax.swing.JButton beginGradingButton;
    private javax.swing.JButton browseButton1;
    private javax.swing.JButton browseButton2;
    private javax.swing.JButton browseButton3;
    private javax.swing.JPanel cards;
    private javax.swing.JTextField dirTextField;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JLabel gradingLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JButton nextButton1;
    private javax.swing.JButton nextButton2;
    private javax.swing.JButton openOutputButton;
    private javax.swing.JMenu optionsMenu;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JCheckBoxMenuItem polyLearnAnswerMenuItem;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton resultsButton;
    private javax.swing.JTextField rosterFileTextField;
    private javax.swing.JButton viewGradesButton;
    private javax.swing.JButton viewStatsButton;
    // End of variables declaration//GEN-END:variables

}
